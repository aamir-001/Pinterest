<div class="welcome-message">
    <h2>Good morning, <%= user.username %>!</h2>
    <p>Let's create something amazing today.</p>
</div>

<section class="streams-section">
    <div class="section-header">
        <h3>Your Follow Streams</h3>
        <a href="#" class="create-stream-btn">+ Create Stream</a>
    </div>

    <!-- Streams Grid -->
    <div class="streams-grid">
        <% if (streams && streams.length > 0) { %>
            <% streams.forEach(stream => { %>
                <a href="/streams/<%= stream.stream_id %>" class="stream-card-link">
                    <div class="stream-card">
                        <div class="stream-thumbnail">
                            <span class="stream-thumbnail-icon">ðŸ“‹</span>
                        </div>
                        <div class="stream-info">
                            <h4 class="stream-name"><%= stream.stream_name %></h4>
                            <div class="stream-meta">
                                <span class="stream-count">
                                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <rect x="3" y="3" width="7" height="7" rx="1"></rect>
                                        <rect x="14" y="3" width="7" height="7" rx="1"></rect>
                                        <rect x="14" y="14" width="7" height="7" rx="1"></rect>
                                        <rect x="3" y="14" width="7" height="7" rx="1"></rect>
                                    </svg>
                                    <!-- Calculate board count from the data returned by getStreamWithBoards -->
                                    <% 
                                        const creationDate = new Date(stream.creation_date);
                                        const now = new Date();
                                        const diffTime = Math.abs(now - creationDate);
                                        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                                        let timeDisplay = '';
                                        
                                        if (diffDays < 1) {
                                            timeDisplay = 'Today';
                                        } else if (diffDays === 1) {
                                            timeDisplay = 'Yesterday';
                                        } else if (diffDays < 7) {
                                            timeDisplay = `${diffDays} days ago`;
                                        } else if (diffDays < 30) {
                                            const weeks = Math.floor(diffDays / 7);
                                            timeDisplay = `${weeks} ${weeks === 1 ? 'week' : 'weeks'} ago`;
                                        } else {
                                            const months = Math.floor(diffDays / 30);
                                            timeDisplay = `${months} ${months === 1 ? 'month' : 'months'} ago`;
                                        }
                                    %>
                                    <!-- Placeholder - this will be filled in properly with actual data -->
                                    - boards
                                </span>
                                <span>â€¢</span>
                                <span><%= timeDisplay %></span>
                            </div>
                        </div>
                    </div>
                </a>
            <% }) %>
        <% } else { %>
            <div class="empty-state">
                <h3>You don't have any follow streams yet!</h3>
                <p>Create a follow stream to organize and track your favorite boards</p>
                <a href="#" class="create-stream-btn">Create Your First Stream</a>
            </div>
        <% } %>

        <% if (streamError) { %>
            <div class="error-message">
                <p><%= streamError %></p>
            </div>
        <% } %>
    </div>
</section>

<!-- Create Stream Modal -->
<div id="createStreamModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Create follow stream</h3>
            <span class="close-modal">&times;</span>
        </div>
        
        <form id="createStreamForm" action="/streams/create" method="POST">
            <div class="form-group">
                <label for="streamName">Name</label>
                <input type="text" id="streamName" name="stream_name" class="form-control" required placeholder="Like 'Design Inspiration' or 'Travel Ideas'">
            </div>
            
            <div class="form-helpers">
                <p class="privacy-note">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                        <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                    </svg>
                    Streams are private and only visible to you
                </p>
            </div>
            
            <div class="form-actions">
                <button type="button" class="btn-cancel" onclick="closeStreamModal()">Cancel</button>
                <button type="submit" class="btn-create">Create</button>
            </div>
        </form>
    </div>
</div>

<style>
    .privacy-note {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #666;
        font-size: 14px;
        margin-top: 20px;
        background-color: #f0f0f0;
        padding: 12px;
        border-radius: 8px;
    }
    
    .form-helpers {
        margin-top: 20px;
    }
</style>

<script>
    // Get the modal
    const streamModal = document.getElementById('createStreamModal');
    
    // Get all buttons that open the modal
    const createStreamBtns = document.querySelectorAll('.create-stream-btn');
    
    // Get the <span> element that closes the modal
    const closeStreamBtn = streamModal.querySelector('.close-modal');
    
    // When the user clicks the button, open the modal 
    createStreamBtns.forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            streamModal.style.display = "block";
            document.body.style.overflow = "hidden"; // Prevent scrolling
        });
    });
    
    // When the user clicks on <span> (x), close the modal
    closeStreamBtn.addEventListener('click', function() {
        closeStreamModal();
    });
    
    // When the user clicks anywhere outside of the modal, close it
    window.addEventListener('click', function(event) {
        if (event.target == streamModal) {
            closeStreamModal();
        }
    });
    
    // Close modal function
    function closeStreamModal() {
        streamModal.style.display = "none";
        document.body.style.overflow = "auto"; // Re-enable scrolling
    }
</script>